from sympy import mod_inverse

N = int("26826878662803908041786399508451198684248417115863932667786724935706389318485453073310122254083069246923242256923180649445793371342716185864233532039768376165303862042780281873996603386206690234783209846855082292080229016731944313282037742399845712382859055533733053294142725722616037867160645162420785821380315444038427347964202471399768205896998275156404046680388805142651963287378249395264866096242171712093746640215997074047903863648055102909223664756170337781750195864826460558996550836532281389271614523535158860998505745751558859909885501639515587960054777295156228920690681453478420246754517916500013714611453")
e1 = 1325293
e2 = 1323733

C1 = int("20884129213116280712946983871083617002333851706754881767762465858651199503856749709183392940006256413953947302357908157700039056632222949348516179755598858467411786313319476372763201332243836514997057966308583120914506585587503786649678647347876058087848707260158816704262176869144578183967361054387381034155573682549340537252524075405701798018889661375228645921030012667719927139488760000438726179707244433823185978333587533522954255392429848951294645424485336197343261717333260801918465798521232238590490833240892214066421275051701927631883682707498455444589022155120501738888624802502235404758397793716709767191367")
C2 = int("59209274237315823165847042421379924297319405264130009388907953679250232390067839177474443500891865736507263986765990647306410676443891769049944717386980093467111726803677904333993844811170644493831984235131621317282328668766749712376694660187690199260736321251491571206605998408872249704545499436916730572221152991159065565839311831436823103240916940005584114890709086825936749169189743707450590363939744848127570437373640666354131086341751854445647532967179182102541630878203422624291088996364204047922149425112788718910475832712112937609912437368405134972236445299647556138371557359465016604787096214452440876270")

def extended_gcd(a, b):
    if a == 0:
        return b, 0, 1
    gcd, x1, y1 = extended_gcd(b % a, a)
    x = y1 - (b // a) * x1
    y = x1
    return gcd, x, y

gcd, x, y = extended_gcd(e1, e2)

assert gcd == 1, "e1 и e2 должны быть взаимно простыми."

if x < 0:
    x += e2
if y < 0:
    y += e1

M = (pow(C1, x, N) * pow(C2, y, N)) % N

print("Восстановленное числовое сообщение:", M)